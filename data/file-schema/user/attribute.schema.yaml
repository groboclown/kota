---

"$schema": "http://json-schema.org/draft-07/schema#"
"$id": "https://groboclown.github.io/kota/site/schema/attribute.schema.json"
title: Attribute Module File Entry
description: >
  An entry in a module file describing an attribute that a value can belong to.
allOf:
  - type: object
    properties:
      name:
        type: string
        pattern: "^\\S\\S+$"
    required: 
      - name
  - oneOf:
    # The map type...
    - type: object
      properties:
        type:
          type: string
          enum: [ map ]
      required: [ type ]
      
    # The fuzz type
    - type: object
      properties:
        type:
          type: string
          enum: [ fuzz ]
      required: [ type ]
    
    # The group set type
    - type: object
      properties:
        type:
          type: string
          enum: [ group ]
      required: [ type ]
    
    # The date type
    - type: object
      properties:
        type:
          type: string
          enum: [ date ]
      required: [ type ]
    
    # The number type, which is bounded
    # Note that this SHOULD use the max range constants...
    - type: object
      properties:
        type:
          type: string
          enum: [ number ]
        min:
          type: integer
          min: -1000000000
          max: 1000000000
        max:
          type: integer
          min: -1000000000
          max: 1000000000
        # Need an extra constrint, forcing min < max.
      required: [ type, min, max ]
    
    # shortcut: "number" value given as count, and translated into an integer
    - type: object
      properties:
        type:
          type: string
          enum: [ count ]
      required: [ type ]
    
    # shortcut: "number" value given as range, and translated into an integer
    - type: object
      properties:
        type:
          type: string
          enum: [ range ]
        min:
          type: integer
          min: -1000000000
          max: 1000000000
        max:
          type: integer
          min: -1000000000
          max: 1000000000
        # Need an extra constrint, forcing min < max.
      required: [ type ]

    # The function types.
    - allOf:
      - type: object
        properties:
          type:
            type: string
            enum: [ calculated-near ]
          for:
            description: >
              the attribute in the context that the function uses.
            type: string
            pattern: "^[^\\s/]+$"
          ramp:
            description: >
              linear ramp distance from 0 to 1
            type: number
            min: 0
            max: 1
        required: [ type, for ]
      - oneOf:
        - type: object
          properties:
            target:
              type: integer
              min: -1000000000
              max: 1000000000
          required: [ target ]
        - type: object
          properties:
            lessThan:
              type: integer
              min: -1000000000
              max: 1000000000
          required: [ lessThan ]
        - type: object
          properties:
            moreThan:
              type: integer
              min: -1000000000
              max: 1000000000
          required: [ moreThan ]
        - type: object
          properties:
            min:
              type: integer
              min: -1000000000
              max: 1000000000
            max:
              type: integer
              min: -1000000000
              max: 1000000000
          required: [ min, max ]

    - type: object
      properties:
        type:
          type: string
          enum: [ calculated-number ]
        expression:
          description: >
            computation string expression
          type: string
          minLength: 3
          maxLength: 200
        requires:
          description: >
            map of expression variable names to context attribute name
          type: object
          patternProperties:
          - "^[^\\s/]+$":
            type: string
            pattern: "^[^\\s/]+$"
        bound:
          description: >
            boundary conditions
          type: object
          properties:
            min:
              type: integer
              min: -1000000000
              max: 1000000000
            max:
              type: integer
              min: -1000000000
              max: 1000000000
          required: [ min, max ]
        round:
          type: string
          enum: [ floor, ceiling, closest ]


    - type: object
      properties:
        type:
          type: string
          enum: [ calculated-count ]
        expression:
          type: string
          minLength: 3
          maxLenth: 200
        requires:
          description: >
            map of expression variable names to context attribute name
          type: object
          patternProperties:
          - "^[^\\s/]+$":
            type: string
            pattern: "^[^\\s/]+$"
        bound:
          description: >
            boundary conditions
          type: object
          properties:
            min:
              type: integer
              min: -1000000000
              max: 1000000000
            max:
              type: integer
              min: -1000000000
              max: 1000000000
          required: [ min, max ]
        round:
          type: string
          enum: [ floor, ceiling, closest ]
